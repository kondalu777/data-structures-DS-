#include <stdio.h>
#include <stdlib.h>

#define SIZE 10

int hashTable[SIZE];

void initHashTable() {
  for (int i = 0; i < SIZE; i++) hashTable[i] = -1;
}

int hashFunction(int key) {
  return key % SIZE;
}

void insertLinearProbing(int key) {
  int index = hashFunction(key);
  int i = 0;
  while (hashTable[(index + i) % SIZE] != -1) {
    i++;
  }
  hashTable[(index + i) % SIZE] = key;
}

int searchLinearProbing(int key) {
  int index = hashFunction(key);
  int i = 0;
  while (hashTable[(index + i) % SIZE] != -1) {
    if (hashTable[(index + i) % SIZE] == key) return (index + i) % SIZE;
    i++;
  }
  return -1;
}

void displayHashTable() {
  for (int i = 0; i < SIZE; i++) printf("%d ", hashTable[i]);
  printf("\n");
}

int main() {
  initHashTable();
  insertLinearProbing(5);
  insertLinearProbing(11);
  insertLinearProbing(7);
  insertLinearProbing(25);
  displayHashTable();
  int index = searchLinearProbing(11);
  if (index == -1) {
    printf("Element not found\n");
  } else {
    printf("Element found at index %d\n", index);
  }
  return 0;
}
