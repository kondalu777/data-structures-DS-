#include <stdio.h>
#include <stdlib.h>

struct node {
  int data;
  struct node* left;
  struct node* right;
};

struct node* createNode(int data) {
  struct node* node = (struct node*)malloc(sizeof(struct node));
  node->data = data;
  node->left = NULL;
  node->right = NULL;
  return node;
}

void inorderTraversal(struct node* node) {
  if (node == NULL) return;
  inorderTraversal(node->left);
  printf("%d ", node->data);
  inorderTraversal(node->right);
}

void preorderTraversal(struct node* node) {
  if (node == NULL) return;
  printf("%d ", node->data);
  preorderTraversal(node->left);
  preorderTraversal(node->right);
}

void postorderTraversal(struct node* node) {
  if (node == NULL) return;
  postorderTraversal(node->left);
  postorderTraversal(node->right);
  printf("%d ", node->data);
}

int main() {
  struct node* root = createNode(1);
  root->left = createNode(2);
  root->right = createNode(3);
  root->left->left = createNode(4);
  root->left->right = createNode(5);
  printf("Inorder Traversal: ");
  inorderTraversal(root);
  printf("\n");
  printf("Preorder Traversal: ");
  preorderTraversal(root);
  printf("\n");
  printf("Postorder Traversal: ");
  postorderTraversal(root);
  printf("\n");
  return 0;
}
